"The impact of low quality identifier names on program comprehension is reasonably
well understood \cite{DeiBenbockPizka05,Lawrie2007,Lawrie2006}, but little is known
about the extent to which the quality of identifier names might influence the quality
of source code" \cite{ButlerWemelingerYu10}.

"Existing research on source code readability focuses on the contribution the
components of source code make to readability" \cite{Buse2008}.

"A software characteristic that has the potential to improve software quality is the choice of
identifier name, and this is particularly so in large software systems.
identifier-naming sytle guidelines, supported by empirical evidence and generally accepted by
software professionals to direct towards improved source code readabiity are candidates for
automation by a tool.
Such an automated tool could make visibile aspects of software quality that are less keenly
perceived by the novice programmer and could assist in ther education along the path to
expert status"\cite{Relf04}.

IMPORTANTE:
"Software quality is not defined in terms of quality attributes but instead must be
inferred from characteristics that correlate to quality attributes and defect attributes.
One of these quality attributes is the readability of the software.
However, the software engineer, who is ultimately responsible for software quality,
is not supported well by their formal education, the software engineering culture, the
existence of useful tools and where these tools do exist by their limited up-take by industry.
Human cognitive limitations similarly frustrate the development of readable source code.
Software characteristics have been identified, which correlate well to source code readability.
One of these software characteristics, which have been supported by empirical research,
is the choice of identifier name".\cite{Relf04}

"Buse and Weimer \cite{Buse2008} developed a readability metric for Java derived from measurements 
of, among others, the number of parentheses and braces, line length, the number
of blank lines, and the number, frequency and length of identifiers.
Using machine learning, the readability metric was trained to agree with the judgement 
of human source code readers.
Buse and Weimer found a significant statistical relationship between the readability of 
methods and the presence of defects found by FindBugs in open source code bases. 
Although their work makes a link between readability and software quality, their notion
of readability ignores the quality of identifier names".

\textbf{"a low-cost heuristic to identify potentially problematic regions of source code"}

"The predictive probability associated with each relationship illustrates the utility
of the identifier flaws as light-weight classifiers for source code quality"
\cite{ButlerWemelingerYu10}.
